name: Release CLI

on:
  push:
    branches:
      - release # Change to your default branch

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Main Branch Separately
        run: |
          git fetch origin main
          git checkout main

      - name: Read & Increment Version
        id: version
        run: |
          VERSION_FILE="VERSION"
          OLD_VERSION=$(cat $VERSION_FILE)

          # Extract major, minor, and patch versions
          MAJOR=$(echo $OLD_VERSION | cut -d. -f1)
          MINOR=$(echo $OLD_VERSION | cut -d. -f2)
          PATCH=$(echo $OLD_VERSION | cut -d. -f3)

          # Increment the patch version
          NEW_VERSION="$MAJOR.$MINOR.$(($PATCH + 1))"

          # Save new version back to VERSION file
          echo $NEW_VERSION > $VERSION_FILE
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit Updated VERSION File
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add VERSION
          git commit -m "Bump version to $NEW_VERSION"
          git push

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Build CLI for All Platforms
        run: |
          make release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          name: "Release v${{ env.NEW_VERSION }}"
          generate_release_notes: true
          files: |
            vault-linux
            vault-mac
            vault.exe
          body: "New release of vault"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
